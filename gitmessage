subject line

# NAME
#     gitmessage - template for git commit messages
#
# SYNOPSIS
#     FILE OPTION: @DIR
#     CODE OPTION: Contents @FILE
#     [ticketId][test|part|fix][OPTION] Contents @FILE
#
#
# DESCRIPTION
#     A systematic way of mangaing git commit messages.
#     Use git verbs, which is an alias, to see a list of commit verbs
#
# FILE MANIPULATION OPTION
#     INC = include
#         INC @newfiles
#         INC @newdir/
#     REN = rename
#         REN @oldfile -> @newfile
#         REN @olddir/ -> @newdir/
#     COP = copy
#         COP @oldfile -> @newfile
#         COP @olddir/ -> @newdir/
#     MOV = move
#         MOV @oldfile -> @newfile
#         MOV @olddir/ -> @newdir/
#     DEL = delete
#         DEL @oldfiles
#         DEL @olddir/
#     UPD = update from a third-party repo
#         UPD @third-party repo
#
# CODE OPTION
#     Add = add new functions/features
#         Add myFunc() @file
#     Rem = remove functions/features
#         Rem myFunc() @file
#     Mod = modify functions/features
#         Mod myFunc() @file
#     Ref = refactor code without add/remove/modifying any feature
#         Ref myFunc() @file
#
#     Com = comment
#         Com myFunc() @file
#         Com TODO @file
#
# BUG HANDLING
#     [ticketId][new|test|part|fix][Add|Rem|Mod|Ref]Contents @files
#         [#250001][new]Rem buggyFunc() @file
#         [#253012][fix]Rem buggyFunc() @file
#         [#254238][part]Rem buggyFunc() @file
#         [#259492][test]Add magicFunc(); Rem maybeBuggyFunc() @file
#
# Bug = bug
#     Bug #253012
#
# Version control:
#     _Ver = Release version
#
# GIT DEFAULTS
#     Merge
#
# Misc
#     OCD = minor whitespace/layout changes that affects nothing in terms of
#           functionality
