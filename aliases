#=========================================================================#
   # Filename: aliases                                                 #
   # Description: shell aliases                                        #
   # Maintainer: Maximilian Q. Wang <maxlufs@gmail.com>                #
   # URL: https://github.com/Maxlufs/dotfiles                          #
#=========================================================================#
   # Usage:                                                            #
   # source aliases @bashrc                                            #
#=========================================================================#
   # Contents:                                                         #
   # 00. System checking                                               #
   # 01. Navigation                                                    #
#=========================================================================#

#=========================================================================#
# TODO                                                                    #
# S: Test OS version, use dpkg or rpm                                     #
# S: Test OS version, tree --du or -s                                     #
#=========================================================================#

# POSIX
# if command -v <app> >/dev/null; then echo <app> exists; fi
# Problem: <app> may be defined in bash scripts such as aliases, which is
# useless.
# Use -p for force a PATH search (still will include alias)
# Use command -v <app> | grep -v 'alias'
#
# hash
# type
# Problem: type also shows <app> is aliased to <some_alias>
# Use -P to force a PATH search
# if type -P <app> >/dev/null; then echo <app> exists; fi

###########################################################################
# 00. System checking
#=========================================================================#
# PKG should not reuturn an '-a' list. Time effiency
if $(__has_command lsb_release); then
	DISTRO=$(lsb_release -i | cut -f2)
	if [ $DISTRO == 'CentOS' ]; then PKG='rpm -q';fi
	if [ $DISTRO == 'ubuntu' ]; then PKG='dpkg -qa';fi
	unset DISTRO
fi

# if user is not root, pass all command s via sudo #
# if [ $UID -ne 0 ]; then
# alias reboot='sudo reboot'
# fi

# path
alias path='echo -e ${PATH//:/\\n}'
###########################################################################


###########################################################################
# 01. Navigation
#=========================================================================#
# number. = go up how many number of levels
alias ..='cd ..'
alias 1.='cd ..'
alias ...='cd ../..'
alias 2.='cd ../..'
alias ....='cd ../../..'
alias 3.='cd ../../..'
alias .....='cd ../../../..'
alias 4.='cd ../../../..'
alias ......='cd ../../../../..'
alias 5.='cd ../../../../..'
# alias ../..='cd ../..'            invalid alias names
# alias ../../..='cd ../../..'      invalid alias names
alias -- -='cd -'
alias cd..='cd ..'

# Shortcuts
#Dropbox='/home/Dropbox'
# mkdir, might be too verbose
alias mkdir='mkdir -pv'

# open files
# gnome-open
# kde-open
# open -> openvt by default
if [[ "$OSTYPE" == "linux-gnu" ]]; then
	alias open="xdg-open"
fi
# mimeopen
###########################################################################


###########################################################################
# 0. Syntax Highlight
#=========================================================================#
# ls
# ==
# NOTE: copied from /etc/skel/.bashrc
# enable color support of ls and also add handy aliases
lscolor_f=''

if $(__has_command dircolors); then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	lscolor_f='--color=auto'
fi
if [[ "$OSTYPE" == "darwin"* ]]; then
	lscolor_f='-G'
fi

#alias dir="dir ${lscolor_f}"
#alias vdir="vdir ${lscolor_f}"

# normal files
alias l="ls ${lscolor_f}"
# normal files
alias ls="ls ${lscolor_f}"
# normal files, long format
alias ll="ls ${lscolor_f} -l -h -p"
#
# All files
alias la="ls ${lscolor_f} -A -h"
# All files, long format
alias lla="ls ${lscolor_f} -l -A -h -p"
#
# hidden files, exclude . and ..
alias l.="ls ${lscolor_f} -d .[^.]*"
# hidden files, long format
alias ll.="ls ${lscolor_f} -l -h -d -p .[^.]*"

# directories only
alias ld="ls ${lscolor_f} -d */"
# directories only, long format
alias lld="ls ${lscolor_f} -d */ -l -h"

# hidden directories, exclude . and ..
alias ld.="ls ${lscolor_f} -d .[^.]*/"
alias l.d="ls ${lscolor_f} -d .[^.]*/"
# hidden directories, exclude . and .., long format
alias lld.="ls ${lscolor_f} -l -h -d .[^.]*/"
alias ll.d="ls ${lscolor_f} -l -h -d .[^.]*/"

unset lscolor_f

# regular files only, need to set color to always to pass through the pipe
# TODO: currently use -file-type to append /=>@| and grep -v to remove it
# not perfect yet, since grep will print out each entry in a new line
alias lf="ls --file-type --color=always | grep -v @ | grep -v /"
# regular files only, long format
alias llf='ls --file-type -l -h -p --color=always | grep -v @ | grep -v /'

# hidden regular files
alias lf.='ls --file-type -d .* --color=always | grep -v @ | grep -v /'
alias l.f='ls --file-type -d .* --color=always | grep -v @ | grep -v /'
# hidden regular files, long format
alias llf.='ls -l -h --file-type -d .* --color=always | grep -v @ | grep -v /'
alias ll.f='ls -l -h --file-type -d .* --color=always | grep -v @ | grep -v /'

# grep
# ====
alias grep='grep --colour=auto'
alias egrep='egrep --colour=auto'
alias fgrep='fgrep --colour=auto'


# colordiff
# =========
if $(__has_command colordiff); then
	alias diff='colordiff'
fi

# du
# ==
# alias
# alias ds='du -sh'            # total size of dir, human-readable
# df
alias dfh='df -h'
# free
alias freeh='free -h'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
###########################################################################


###########################################################################
# 0. Application
#=========================================================================#
# vimrc
alias vimrc="vim $HOME/.vimrc"
alias vundle="vim $HOME/.vimrc_vundle"
alias plug="vim $HOME/.vimrc_plug"
alias bashrc="vim $HOME/.bashrc"
alias screenrc="vim $HOME/.screenrc"
alias aliases="vim $HOME/.aliases"
alias xsessionrc="vim $HOME/.xsessionrc"
alias i3rc="vim $HOME/.config/i3/config"
alias awesomerc="vim $HOME/.config/awesome/rc.lua"
###########################################################################

###########################################################################
# 0. Application
#=========================================================================#
# screen
alias s='screen'
alias sls='screen -ls'
alias sr='screen -r'

# job control
alias j='jobs'

# trash
if $(__has_command trash-put); then
	alias rm='trash-put'
fi

# apt / apt-cache
alias apt='sudo apt'
alias update='sudo apt update && sudo apt dist-upgrade'
alias udpate='sudo apt update && sudo apt dist-upgrade'
# alias update='sudo apt update'
# alias upgrade='sudo apt dist-upgrade'
# alias install='sudo apt install' system already has install
alias autoremove='sudo apt autoremove'
alias purge='sudo apt purge'

alias agu='sudo apt update'
alias agi='sudo apt install'
alias agd='sudo apt dist-upgrade'
alias agr='sudo apt remove'
alias aga='sudo apt autoremove'
alias agc='sudo apt clean'

alias ags='sudo aptitude search'
alias agsh='sudo apt-cache show'
alias afs='sudo apt-file search'
alias afsh='sudo apt-file show'
alias afu='sudo apt-file update'

alias acs='sudo apt-cache search'

# display infomation of a package
# also use apt-cache show package-name to show more info like hack values
alias ver='dpkg -p'


# calculator
alias calc='bc -l'

# if type -P tree
# tree Version 1.6.0
# tr is taken # alias tr='tree -Ch --du'
# -C: turn color on always
# -h: print size in human readable
# --du: for dirs, use accumulation of sub files and dirs
# Note: earlier versions only has -s show size
# Node: -L 1 will disable --du
# --dirsfirst: list dirs first

if $(__has_command tree); then
	common_flags='-Ch --du --dirsfirst -N'

	alias tree="tree ${common_flags}"
	alias t1="tree ${common_flags} -L 1"
	alias tree1="tree ${common_flags} -L 1"
	alias t2="tree ${common_flags} -L 2"
	alias tree2="tree ${common_flags} -L 2"
	alias t3="tree ${common_flags} -L 3"
	alias tree3="tree ${common_flags} -L 3"
	alias t4="tree ${common_flags} -L 4"
	alias tree4="tree ${common_flags} -L 4"
	alias t5="tree ${common_flags} -L 5"
	alias tree5="tree ${common_flags} -L 5"

	alias t="tree ${common_flags} -L 1"
	alias tt="tree ${common_flags} -L 2"
	alias ttt="tree ${common_flags} -L 3"
	alias tttt="tree ${common_flags} -L 4"
	alias ttttt="tree ${common_flags} -L 5"

	# -d: list dirs only
	alias td="tree -C -h --du -L 1 -d"
	alias ttd="tree -C -h --du -L 2 -d"
	alias tttd="tree -C -h --du -L 3 -d"
	alias ttttd="tree -C -h --du -L 4 -d"
	alias tttttd="tree -C -h --du -L 5 -d"

	unset common_flags
fi

# ranger
alias r='ranger'

# git
alias gitst='git status'
alias gst='git status'
function _git_ci() {
	_git_commit
}

# custom
alias blog='vim ~/Documents/blog/vim'
alias dotfiles='cd ~/.dotfiles'
# typo
alias ndoe='node'
###########################################################################
